# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Filmdaten zu lesen"
type Query {
  filme(titel: String): [Film!]

  film(id: ID!): Film
}

"Funktionen, um Filme neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: FilmInput!): CreatePayload

  update(input: FilmUpdateInput!): UpdatePayload

  delete(id: ID!): Boolean

  # Mutation, weil z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  login(username: String!, password: String!): LoginResult
}

"Daten zum Titel eines Films"
type Titel {
  titel: String!
  untertitel: String
}

"Daten zu einem Schauspieler"
type Schauspieler {
  vorname: String!
  nachname: String!
}

"Datenschema zu einem Film, welcher gelesen wird"
type Film {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  isan: String!
  rating: Int
  genre: Genre
  preis: Float!
  lieferbar: Boolean
  datum: String
  homepage: String
  schlagwoerter: [String]
  # 1:1-Beziehung
  titel: Titel!
  # field mit @ResolveField
  rabatt(short: Boolean): String!
}

"Enum-Typ für die Art eines Films"
enum Genre {
  FANTASY
  HORROR
  ACTION
  SCIENCEFICTION
}

"Daten zum Titel eines neuen Films"
input TitelInput {
  titel: String!
  untertitel: String
}

"Daten zu den Schauspielern eines Films"
input SchauspielerInput {
  vorname: String!
  nachname: String!
}

"Daten für einen neuen Film"
input FilmInput {
  isan: String
  rating: Int
  genre: Genre
  preis: Float
  rabatt: Float
  lieferbar: Boolean
  datum: String
  homepage: String
  schlagwoerter: [String]
  titel: TitelInput!
  mehrereschauspieler: [SchauspielerInput!]
}

type CreatePayload {
  id: Int
}

"Daten für ein zu ändernden Film"
input FilmUpdateInput {
  id: ID
  version: Int
  isan: String
  rating: Int
  genre: Genre
  preis: Float
  rabatt: Float
  lieferbar: Boolean
  datum: String
  homepage: String
  schlagwoerter: [String]
}

type UpdatePayload {
  version: Int
}

type LoginResult {
  token: String!
  expiresIn: String!
  roles: [String]!
}
